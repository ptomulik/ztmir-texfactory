function [P, status] = shaper_params_gui(varargin)
  if nargin >= 1; P = varargin{1}; else; P = shaper_params_default; end
  prompts = { 'a [mm]',         ...
              'b [mm]',         ...
              'r [mm]',         ...
              'c [mm]',         ...
              'Ax [mm]',        ...
              'Ay [mm]',        ...
              'Dx [mm]',        ...
              'Dy [mm]',        ...
              'omega [rad/s]',  ...
              'xmin [mm]',      ...
              'xmax [mm]',      ...
              'ymin [mm]',      ...
              'ymax [mm]' };
  values  = { P.a,        ...
              P.b,        ...
              P.r,        ...
              P.c,        ...
              P.A(1),     ...
              P.A(2),     ...
              P.D(1),     ...
              P.D(2),     ...
              P.om,       ...
              P.xlim(1),  ...
              P.xlim(2),  ...
              P.ylim(1),  ...
              P.ylim(2) };

  status = 1;
  while(true)
    values = inputdlg(prompts, 'Shaper Parameters', 1, values);
    if length(values)
      % Check
      valid = 0;
      errmsg = 'Invalid values found:';
      for i = 1:13
        x = str2double(values{i});
        if isnan(x)
          errmsg = strcat(errmsg, sprintf('\n  %s = "%s" (not a number)', prompts{i}, values{i} ));
        else
          valid = valid + 1;
        end
      end
      if valid == length(prompts)
        P.a =   str2double(values{1});
        P.b =   str2double(values{2});
        P.r =   str2double(values{3});
        P.c =   str2double(values{4});
        P.A =   [str2double(values{5}), str2double(values{6})]';
        P.D =   [str2double(values{7}), str2double(values{8})]';
        P.om =  str2double(values{9});
        P.xlim =[str2double(values{10}), str2double(values{11})]';
        P.ylim =[str2double(values{12}), str2double(values{13})]';
        status = true;
        break;
      else
        errordlg(strcat(errmsg,sprintf('\nPlease enter valid numbers')), 'Validation failed!');
      end
    else
      status = false;
      break;
    end
  end
end
